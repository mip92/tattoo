#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–±–æ—Ä–∫–∏ –∏ –¥–µ–ø–ª–æ—è
# 1. –ö–ª–æ–Ω–∏—Ä—É–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
# 2. –°–æ–±–∏—Ä–∞–µ–º backend –∏ –ø—É—à–∏–º –≤ Docker Hub
# 3. –î–µ–ø–ª–æ–∏–º backend –Ω–∞ —Å–µ—Ä–≤–µ—Ä
# 4. –ñ–¥–µ–º, –ø–æ–∫–∞ backend –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
# 5. –°–æ–±–∏—Ä–∞–µ–º frontend —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è API
# 6. –î–µ–ø–ª–æ–∏–º frontend

set -e

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f "docker-hub.env" ]; then
    source docker-hub.env
else
    echo "‚ùå –§–∞–π–ª docker-hub.env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª docker-hub.env —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ DOCKER_USERNAME –∏ DOCKER_PASSWORD"
    exit 1
fi

echo "üöÄ –ù–∞—á–∏–Ω–∞—é –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–±–æ—Ä–∫–∏ –∏ –¥–µ–ø–ª–æ—è..."
echo ""

# –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä—É–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
echo "üì• –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä—É—é/–æ–±–Ω–æ–≤–ª—è—é —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏..."
./clone-repos.sh

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
if [ ! -d "backend" ] || [ ! -d "frontend" ]; then
    echo "‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./clone-repos.sh"
    exit 1
fi

echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –≥–æ—Ç–æ–≤—ã!"
echo ""

# –®–∞–≥ 2: –°–æ–±–∏—Ä–∞–µ–º –∏ –ø—É—à–∏–º backend
echo "üî® –®–∞–≥ 2: –°–æ–±–∏—Ä–∞—é backend Docker –æ–±—Ä–∞–∑..."
docker buildx create --use --name multiarch-builder 2>/dev/null || docker buildx use multiarch-builder 2>/dev/null || true
docker buildx build --platform linux/amd64,linux/arm64 -t ${USERNAME}/${IMAGE_NAME}:${TAG} --push ./backend

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ backend –æ–±—Ä–∞–∑–∞!"
    exit 1
fi
echo "‚úÖ Backend –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo ""

# –®–∞–≥ 3: –î–µ–ø–ª–æ–∏–º backend –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo "üöÄ –®–∞–≥ 3: –î–µ–ø–ª–æ—é backend –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
echo "–ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É ${SERVER_IP}..."

# –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
scp -i ${SSH_KEY_PATH} deploy-server.sh ${SERVER_USER}@${SERVER_IP}:/root/tattoo-app/

# –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π backend –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
ssh -i ${SSH_KEY_PATH} ${SERVER_USER}@${SERVER_IP} << 'EOF'
    cd /root/tattoo-app
    chmod +x deploy-server.sh
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ backend
    echo "–ó–∞–ø—É—Å–∫–∞—é —Ç–æ–ª—å–∫–æ backend..."
    docker-compose -f docker-compose.prod.yml up -d database backend
    
    echo "–ñ–¥—É, –ø–æ–∫–∞ backend –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤..."
    # –ñ–¥–µ–º, –ø–æ–∫–∞ backend –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ (–ø—Ä–æ–≤–µ—Ä—è–µ–º health endpoint)
    for i in {1..30}; do
        if curl -f http://localhost:3000/health >/dev/null 2>&1; then
            echo "‚úÖ Backend –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
            break
        fi
        echo "‚è≥ –ñ–¥—É... ($i/30)"
        sleep 10
    done
    
    if [ $i -eq 30 ]; then
        echo "‚ùå Backend –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ 5 –º–∏–Ω—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è!"
        exit 1
    fi
EOF

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è backend –Ω–∞ —Å–µ—Ä–≤–µ—Ä!"
    exit 1
fi
echo "‚úÖ Backend —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!"
echo ""

# –®–∞–≥ 4: –°–æ–±–∏—Ä–∞–µ–º frontend —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è API
echo "üî® –®–∞–≥ 4: –°–æ–±–∏—Ä–∞—é frontend Docker –æ–±—Ä–∞–∑..."
echo "–ò—Å–ø–æ–ª—å–∑—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è API URL –≤–æ –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏..."

# –°–æ–±–∏—Ä–∞–µ–º frontend –æ–±—Ä–∞–∑ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è API
docker buildx build \
  --platform linux/amd64,linux/arm64 \
  --build-arg NEXT_PUBLIC_API_URL=http://backend:3000 \
  -t ${USERNAME}/tattoo-client:${TAG} \
  --push ./frontend

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ frontend –æ–±—Ä–∞–∑–∞!"
    exit 1
fi
echo "‚úÖ Frontend –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo ""

# –®–∞–≥ 5: –î–µ–ø–ª–æ–∏–º frontend –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo "üöÄ –®–∞–≥ 5: –î–µ–ø–ª–æ—é frontend –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
ssh -i ${SSH_KEY_PATH} ${SERVER_USER}@${SERVER_IP} << 'EOF'
    cd /root/tattoo-app
    
    # –¢—è–Ω–µ–º frontend –æ–±—Ä–∞–∑
    echo "–ó–∞–≥—Ä—É–∂–∞—é frontend –æ–±—Ä–∞–∑..."
    docker pull ${REGISTRY}/${USERNAME}/tattoo-client:${TAG}
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º frontend
    echo "–ó–∞–ø—É—Å–∫–∞—é frontend..."
    docker-compose -f docker-compose.prod.yml up -d frontend nginx
    
    echo "–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f docker-compose.prod.yml ps
EOF

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è frontend –Ω–∞ —Å–µ—Ä–≤–µ—Ä!"
    exit 1
fi

echo ""
echo "üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
echo "   üåê Frontend: http://${SERVER_IP}"
echo "   üîå API: http://${SERVER_IP}/graphql"
echo "   üíö Health: http://${SERVER_IP}/health"
echo ""
echo "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
echo "   ssh -i ${SSH_KEY_PATH} ${SERVER_USER}@${SERVER_IP}"
echo "   docker-compose -f docker-compose.prod.yml ps"
