name: Deploy Infrastructure

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_ACCESS_TOKEN_EXPIRES_IN: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRES_IN }}
      JWT_REFRESH_TOKEN_EXPIRES_IN: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRES_IN }}
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_ACCESS_TOKEN_EXPIRES_IN=${{ secrets.JWT_ACCESS_TOKEN_EXPIRES_IN }}
            JWT_REFRESH_TOKEN_EXPIRES_IN=${{ secrets.JWT_REFRESH_TOKEN_EXPIRES_IN }}
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          script: |
            echo "🚀 Starting infrastructure deployment..."
            cd /root/tattoo-app
            echo "📥 Checking repository status..."
            if [ ! -d ".git" ]; then
                echo "📥 Repository not found, cloning fresh..."
                cd /root
                rm -rf tattoo-app
                git clone https://github.com/mip92/tattoo.git tattoo-app
                cd tattoo-app
            else
                echo "📥 Updating existing repository..."
                git fetch origin main
                git reset --hard origin/main
                git clean -fd
            fi

            # Debug: проверяем что переменные передались
            echo "🔍 DEBUG: Проверяем переменные окружения..."
            echo "DEBUG: DATABASE_URL=${DATABASE_URL:0:20}..."
            echo "DEBUG: JWT_SECRET=${JWT_SECRET:0:10}..."
            echo "DEBUG: JWT_ACCESS_TOKEN_EXPIRES_IN=${JWT_ACCESS_TOKEN_EXPIRES_IN}"
            echo "DEBUG: JWT_REFRESH_TOKEN_EXPIRES_IN=${JWT_REFRESH_TOKEN_EXPIRES_IN}"
            echo "DEBUG: NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}"

            echo "🔧 Creating .env file from GitHub Secrets..."
            cat > .env << EOF
            DATABASE_URL=$DATABASE_URL
            JWT_SECRET=$JWT_SECRET
            JWT_ACCESS_TOKEN_EXPIRES_IN=$JWT_ACCESS_TOKEN_EXPIRES_IN
            JWT_REFRESH_TOKEN_EXPIRES_IN=$JWT_REFRESH_TOKEN_EXPIRES_IN
            NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
            EOF
            echo "⏹️ Stopping all services..."
            docker-compose -f docker-compose.prod.yml down
            echo "🧹 Cleaning old images..."
            docker image prune -f
            echo "📁 Ensuring backend data directory exists..."
            mkdir -p /root/backend-data
            echo "🔄 Starting all services..."
            docker-compose -f docker-compose.prod.yml up -d
            echo "⏳ Waiting for services to initialize..."
            sleep 30
            echo "📊 Checking service status..."
            docker ps
            echo "💚 Checking health status..."
            docker-compose -f docker-compose.prod.yml ps
            echo "✅ Infrastructure deployment completed!"

      - name: Health check
        run: |
          echo "🔍 Performing health checks..."
          sleep 10

          # Проверяем GraphQL endpoint
          echo "Testing GraphQL endpoint..."
          curl -s http://${{ secrets.SERVER_IP }}/graphql | head -1

          # Проверяем main page
          echo "Testing main page..."
          curl -s http://${{ secrets.SERVER_IP }}/ | head -1

          echo "✅ Health checks completed!"
