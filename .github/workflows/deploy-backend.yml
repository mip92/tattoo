name: Deploy Backend

on:
  workflow_dispatch:
  schedule:
    - cron: "*/10 * * * *" # –ö–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check for backend image updates
        id: check-image
        run: |
          # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π digest –æ–±—Ä–∞–∑–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
          CURRENT_DIGEST=$(ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker images --digests --format '{{.Digest}}' mip92/tattoo-server:latest | head -1")

          # –ü–æ–ª—É—á–∞–µ–º digest –∏–∑ Docker Hub
          HUB_DIGEST=$(docker manifest inspect mip92/tattoo-server:latest | jq -r '.manifests[] | select(.platform.architecture == "amd64") | .digest')

          echo "Current digest: $CURRENT_DIGEST"
          echo "Hub digest: $HUB_DIGEST"

          if [ "$CURRENT_DIGEST" != "$HUB_DIGEST" ]; then
            echo "::set-output name=needs_update::true"
            echo "üîÑ Backend image needs update"
          else
            echo "::set-output name=needs_update::false"
            echo "‚úÖ Backend image is up to date"
          fi

      - name: Deploy backend if updated
        if: steps.check-image.outputs.needs_update == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "üöÄ Deploying updated backend..."

            cd /root/tattoo-app

            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backend
            echo "‚èπÔ∏è Stopping backend service..."
            docker-compose -f docker-compose.prod.yml stop backend

            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–∑
            echo "üóëÔ∏è Removing old backend image..."
            docker rmi mip92/tattoo-server:latest || true

            # –ó–∞–ø—É—Å–∫–∞–µ–º backend —Å –Ω–æ–≤—ã–º –æ–±—Ä–∞–∑–æ–º
            echo "üîÑ Starting backend with new image..."
            docker-compose -f docker-compose.prod.yml up -d backend

            # –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            echo "‚è≥ Waiting for backend to initialize..."
            sleep 30

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            echo "üìä Checking backend status..."
            docker ps | grep backend

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
            echo "üíö Checking backend health..."
            docker-compose -f docker-compose.prod.yml ps | grep backend

            echo "‚úÖ Backend deployment completed!"

      - name: Health check backend
        if: steps.check-image.outputs.needs_update == 'true'
        run: |
          echo "üîç Testing backend health..."
          sleep 15

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º GraphQL endpoint
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.SERVER_IP }}/graphql)

          if [ "$RESPONSE" = "400" ] || [ "$RESPONSE" = "200" ]; then
            echo "‚úÖ Backend is healthy (HTTP $RESPONSE - CSRF protection working)"
          else
            echo "‚ùå Backend health check failed (HTTP $RESPONSE)"
            exit 1
          fi
