name: Deploy Frontend

on:
  workflow_dispatch: # Manual trigger
  repository_dispatch: # Event from tclient repository
    types: [deploy-frontend]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Get frontend image info
        id: image-info
        run: |
          # Get information about new image from payload
          FRONTEND_IMAGE="${{ github.event.client_payload.frontend_image }}"
          echo "frontend_image=$FRONTEND_IMAGE" >> $GITHUB_OUTPUT
          echo "🚀 Deploying frontend image: $FRONTEND_IMAGE"

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "🚀 Deploying updated frontend..."

            cd /root/tattoo-app

            # Force stop and remove frontend container
            echo "⏹️ Force stopping and removing frontend container..."
            docker-compose -f docker-compose.prod.yml down frontend
            docker rm -f tattoo-frontend-prod || true

            # Remove old image (force)
            echo "🗑️ Force removing old frontend image..."
            docker rmi -f mip92/tattoo-client:latest || true

            # Clean up unused images
            echo "🧹 Cleaning up unused images..."
            docker image prune -f

            # Start frontend with new image
            echo "🔄 Starting frontend with new image..."
            docker-compose -f docker-compose.prod.yml up -d frontend

            # Wait for initialization
            echo "⏳ Waiting for frontend to initialize..."
            sleep 20

            # Check status
            echo "📊 Checking frontend status..."
            docker ps | grep frontend

            # Check that new image is being used
            echo "🔍 Checking image hash..."
            docker inspect mip92/tattoo-client:latest --format='{{.Id}}' || echo "New image not found"

            echo "✅ Frontend deployment completed!"

      - name: Health check frontend
        run: |
          echo "🔍 Testing frontend health..."
          sleep 10

          # Check main page
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.SERVER_IP }}/)

          if [ "$RESPONSE" = "200" ]; then
            echo "✅ Frontend is healthy (HTTP $RESPONSE)"
          else
            echo "❌ Frontend health check failed (HTTP $RESPONSE)"
            exit 1
          fi
